{"version":3,"sources":["components/notificationError/NotificationError.js","redux/phoneBook/actions.js","components/contactForm/ContactForm.js","components/helpers/checkContact.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","redux/phoneBook/reducers.js","redux/store.js","index.js"],"names":["NotificationError","content","className","newContactAction","createAction","contact","payload","id","uuidv4","deleteContactAction","filterContactsAction","error","ContactForm","getContacts","contacts","useSelector","state","dispatch","useDispatch","useState","flag","setFlag","newContact","handleChange","target","name","value","CSSTransition","in","classNames","timeout","onEntered","unmountOnExit","onSubmit","ev","preventDefault","reset","undefined","number","items","map","el","checkContact","type","placeholder","onChange","ContactItem","delItem","onClick","ContactList","filteredItems","getIdForDelete","TransitionGroup","component","key","Filter","getNamesByFilter","App","appear","filter","elem","toLowerCase","includes","phoneBookReducer","createReducer","errors","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","storage","blacklist","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c096167a.chunk.js","sourcesContent":["import React from \"react\";\nimport '../contactForm/ContactForm.css'\nexport function NotificationError({ content }) {\n  return (\n    <>\n      <div className='notification'>\n        <h3>{content}</h3>\n      </div>\n    </>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const newContactAction = createAction(\n  \"phonebook/ADD_NEW_CONTACT\",\n  (contact) => ({\n    payload: {\n      id: uuidv4(),\n      ...contact,\n    },\n  })\n);\n\nexport const deleteContactAction = createAction(\"phonebook/DELETE_CONTACT\");\nexport const filterContactsAction = createAction(\"phonebook/FILTER_CONTACTS\");\nexport const error = createAction(\"errors/ERROR_MESSAGE\");\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { NotificationError } from \"../notificationError/NotificationError\";\nimport { checkContact } from \"../helpers/checkContact\";\nimport \"./ContactForm.css\";\n\nconst ContactForm = ({ getContacts }) => {\n  const { contacts } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n  const [flag, setFlag] = useState(false);\n\n  const newContact = {};\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const form = ev.target;\n    form.reset();\n\n    const flag = checkContact(newContact, contacts, dispatch);\n    flag ? getContacts(newContact) : setFlag(true);\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    newContact[name] = value;\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={flag}\n        classNames=\"noti\"\n        timeout={750}\n        onEntered={() => setFlag(false)}\n        unmountOnExit\n      >\n        <NotificationError content=\"You have not completed all the fields or the values ​​are repeated\" />\n      </CSSTransition>\n\n      <form onSubmit={handleSubmit}>\n        <label className=\"text\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"text\">\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { error } from \"../../redux/phoneBook/actions\";\n\nexport const checkContact = (contact, contacts, dispatch) => {\n  let flag = true;\n\n  if (contact.name === undefined || contact.number === undefined) {\n    dispatch(error(\"not all fields are filled\"));\n    return false;\n  } else {\n    contacts.items.map((el) =>\n      el.name === contact.name ? (flag = false) : \"\"\n    );\n    if (flag) {\n      return true;\n    } else {\n      dispatch(error(\"such contact already exists\"));\n      return false;\n    }\n  }\n};\n","import React from 'react';\n\nconst ContactItem = ({name, number, id, delItem}) => {\n const deleteItem =()=>{\n  delItem(id);\n }\n  return(\n    <li className='list__item'>\n      <p className='text'>{name}: {number}</p>\n      <button className='btn' onClick={deleteItem}>delete</button>\n    </li>\n  )\n}\n\nexport default ContactItem;","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ContactItem from \"./contactItem/ContactItem\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ filteredItems, getIdForDelete }) => {\n  const delItem = (id) => {\n    getIdForDelete(id);\n  };\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {filteredItems.map(({ name, number, id }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"ContactItem\">\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              delItem={delItem}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\nexport default ContactList;\n","import React from \"react\";\n\nconst Filter = ({ getNamesByFilter }) => {\n  return (\n    <>\n      <h3 className=\"title\">Find contacts by name</h3>\n      <input\n        className=\"input\"\n        onChange={getNamesByFilter}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n      ></input>\n    </>\n  );\n};\nexport default Filter;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\n\nimport Filter from \"./filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  newContactAction,\n  deleteContactAction,\n  filterContactsAction,\n} from \"../redux/phoneBook/actions\";\n\nexport default function App() {\n  const { contacts } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n  const getContacts = (newContact) => {\n    dispatch(newContactAction(newContact));\n  };\n\n  const deleteContact = (id) => {\n    dispatch(deleteContactAction(id));\n  };\n\n  const getNamesByFilter = (value) => {\n    dispatch(filterContactsAction(value));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title-anim\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        <ContactForm getContacts={getContacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter\n          getNamesByFilter={({ target: { value } }) => getNamesByFilter(value)}\n        />\n        <ContactList\n          filteredItems={\n            contacts.filter\n              ? contacts.items.filter((elem) =>\n                  elem.name\n                    .toLowerCase()\n                    .includes(contacts.filter.toLowerCase())\n                )\n              : contacts.items\n          }\n          getIdForDelete={deleteContact}\n        />\n      </div>\n    </>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {newContactAction,deleteContactAction,filterContactsAction,error} from './actions'\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: \"\",\n  },\n};\n\nexport const phoneBookReducer = createReducer({ ...initialState }, {\n  [newContactAction]: (state, {payload})=>({\n        contacts: {\n          ...state.contacts,\n          items: [payload, ...state.contacts.items],\n        },\n      }),\n  [deleteContactAction]: (state,{payload})=>({\n    contacts: {\n      ...state.contacts,\n      items: [\n        ...state.contacts.items.filter(({id}) => {\n          return id !== payload;\n        }),\n      ],\n    },\n  }),\n  [filterContactsAction]:(state,{payload})=>({\n    contacts: {\n      items: [...state.contacts.items],\n      filter: payload,\n    },\n  })\n});\n\nexport const errors = createReducer('',{\n  [error] : (_,{payload})=>payload,\n  [newContactAction] : (_)=>'',\n  [deleteContactAction] : (_)=>'',\n  [filterContactsAction] : (_)=>'',\n})\n\n","import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { phoneBookReducer, errors } from \"./phoneBook/reducers\";\n\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck:{\n    ignoredActions:[FLUSH, REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER],\n  },\n}), logger];\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"errors\"],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducer,\n  errors: errors,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}